// Generated by CoffeeScript 1.6.3
(function() {
  var DevNullAsyncStorage, Storage, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Storage = require('./Storage');

  DevNullAsyncStorage = (function(_super) {
    __extends(DevNullAsyncStorage, _super);

    function DevNullAsyncStorage() {
      _ref = DevNullAsyncStorage.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    DevNullAsyncStorage.prototype.async = true;

    DevNullAsyncStorage.prototype.getData = function(fn) {
      fn({});
      return null;
    };

    DevNullAsyncStorage.prototype.getMeta = function(fn) {
      fn({});
      return null;
    };

    DevNullAsyncStorage.prototype.writeData = function(data, meta, fn) {
      fn();
      return this;
    };

    DevNullAsyncStorage.prototype.read = function(key, fn) {
      fn(null);
      return null;
    };

    DevNullAsyncStorage.prototype.write = function(key, data, dependencies, fn) {
      if (dependencies == null) {
        dependencies = {};
      }
      if (Object.prototype.toString.call(dependencies) === '[object Function]') {
        fn = dependencies;
        dependencies = {};
      }
      fn();
      return this;
    };

    DevNullAsyncStorage.prototype.remove = function(key, fn) {
      fn();
      return this;
    };

    return DevNullAsyncStorage;

  })(Storage);

  module.exports = DevNullAsyncStorage;

}).call(this);
