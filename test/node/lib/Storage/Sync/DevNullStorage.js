// Generated by CoffeeScript 1.6.3
(function() {
  var Cache, DevNullStorage, cache, expect;

  expect = require('chai').expect;

  Cache = require('../../../../../lib/Cache');

  DevNullStorage = require('../../../../../Storage/DevNullSyncStorage');

  cache = null;

  describe('DevNullSyncStorage', function() {
    return describe('saving/loading', function() {
      beforeEach(function() {
        return cache = new Cache(new DevNullStorage, 'test');
      });
      it('should not save true', function() {
        cache.save('true', true);
        return expect(cache.load('true')).to.be["null"];
      });
      it('should always return null', function() {
        return expect(cache.load('true')).to.be["null"];
      });
      it('should not save true and try to delete it', function() {
        cache.save('true', true);
        cache.remove('true');
        return expect(cache.load('true')).to.be["null"];
      });
      return it('should not save true to cache from fallback function in load', function() {
        var val;
        val = cache.load('true', function() {
          return true;
        });
        expect(val).to.be["true"];
        return expect(cache.load('true')).to.be["null"];
      });
    });
  });

}).call(this);
